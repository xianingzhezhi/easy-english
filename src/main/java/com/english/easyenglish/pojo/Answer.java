package com.english.easyenglish.pojo;

import java.io.Serializable;
import java.util.Date;

/**
 * null
 * @TableName answer
 */
public class Answer implements Serializable {
    /**
     * id
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    private Long answerid;

    /**
     * 试卷题目表
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    private Long examinationitemidfk;

    /**
     * 答题人答案
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    private String answer;

    /**
     * 正确答案
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    private String correct;

    /**
     * 答题人
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    private String respondents;

    /**
     * 答题时间
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    private Date createtime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table answer
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    private static final long serialVersionUID = 1L;

    /**
     * id
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public Long getAnswerid() {
        return answerid;
    }

    /**
     * id
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public void setAnswerid(Long answerid) {
        this.answerid = answerid;
    }

    /**
     * 试卷题目表
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public Long getExaminationitemidfk() {
        return examinationitemidfk;
    }

    /**
     * 试卷题目表
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public void setExaminationitemidfk(Long examinationitemidfk) {
        this.examinationitemidfk = examinationitemidfk;
    }

    /**
     * 答题人答案
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public String getAnswer() {
        return answer;
    }

    /**
     * 答题人答案
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public void setAnswer(String answer) {
        this.answer = answer;
    }

    /**
     * 正确答案
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public String getCorrect() {
        return correct;
    }

    /**
     * 正确答案
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public void setCorrect(String correct) {
        this.correct = correct;
    }

    /**
     * 答题人
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public String getRespondents() {
        return respondents;
    }

    /**
     * 答题人
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public void setRespondents(String respondents) {
        this.respondents = respondents;
    }

    /**
     * 答题时间
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public Date getCreatetime() {
        return createtime;
    }

    /**
     * 答题时间
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    public void setCreatetime(Date createtime) {
        this.createtime = createtime;
    }

    /**
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Answer other = (Answer) that;
        return (this.getAnswerid() == null ? other.getAnswerid() == null : this.getAnswerid().equals(other.getAnswerid()))
            && (this.getExaminationitemidfk() == null ? other.getExaminationitemidfk() == null : this.getExaminationitemidfk().equals(other.getExaminationitemidfk()))
            && (this.getAnswer() == null ? other.getAnswer() == null : this.getAnswer().equals(other.getAnswer()))
            && (this.getCorrect() == null ? other.getCorrect() == null : this.getCorrect().equals(other.getCorrect()))
            && (this.getRespondents() == null ? other.getRespondents() == null : this.getRespondents().equals(other.getRespondents()))
            && (this.getCreatetime() == null ? other.getCreatetime() == null : this.getCreatetime().equals(other.getCreatetime()));
    }

    /**
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getAnswerid() == null) ? 0 : getAnswerid().hashCode());
        result = prime * result + ((getExaminationitemidfk() == null) ? 0 : getExaminationitemidfk().hashCode());
        result = prime * result + ((getAnswer() == null) ? 0 : getAnswer().hashCode());
        result = prime * result + ((getCorrect() == null) ? 0 : getCorrect().hashCode());
        result = prime * result + ((getRespondents() == null) ? 0 : getRespondents().hashCode());
        result = prime * result + ((getCreatetime() == null) ? 0 : getCreatetime().hashCode());
        return result;
    }

    /**
     *
     * @mbg.generated 2021-08-18 13:55:48
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", answerid=").append(answerid);
        sb.append(", examinationitemidfk=").append(examinationitemidfk);
        sb.append(", answer=").append(answer);
        sb.append(", correct=").append(correct);
        sb.append(", respondents=").append(respondents);
        sb.append(", createtime=").append(createtime);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}